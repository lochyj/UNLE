"use strict";(self.webpackChunkunle=self.webpackChunkunle||[]).push([[671],{9881:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var a=t(7462),d=(t(7294),t(3905));const s={sidebar_position:1},r="Quick start",o={unversionedId:"intro",id:"intro",title:"Quick start",description:"Getting Started",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/unle/docs/intro",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar"},i={},l=[{value:"Getting Started",id:"getting-started",level:2},{value:"Adding Nodes",id:"adding-nodes",level:2},{value:"Adding Edges",id:"adding-edges",level:2},{value:"Removing Nodes",id:"removing-nodes",level:2},{value:"Removing Edges",id:"removing-edges",level:2},{value:"Node Language Input",id:"node-language-input",level:2}],g={toc:l},u="wrapper";function p(e){let{components:n,...t}=e;return(0,d.kt)(u,(0,a.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,d.kt)("h1",{id:"quick-start"},"Quick start"),(0,d.kt)("h2",{id:"getting-started"},"Getting Started"),(0,d.kt)("p",null,"Create a new HTML file and include the UNLE dependencies like below"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>UNLE</title>\n    <link rel="stylesheet" href="unle.css">\n    \x3c!-- These libraries are necessary to running UNLE.js at the moment --\x3e\n    <script src="https://cdnjs.cloudflare.com/ajax/libs/pixi.js/7.2.4/pixi.min.js" integrity="sha512-Ch/O6kL8BqUwAfCF7Ie5SX1Hin+BJgYH4pNjRqXdTEqMsis1TUYg+j6nnI9uduPjGaj7DN4UKCZgpvoExt6dkw==" crossorigin="anonymous" referrerpolicy="no-referrer"><\/script>\n    <script data-require="jquery@*" data-semver="2.1.4" src="https://code.jquery.com/jquery-2.1.4.min.js"><\/script>\n    <script data-require="jquery-mousewheel@*" data-semver="3.1.13" src="//cdnjs.cloudflare.com/ajax/libs/jquery-mousewheel/3.1.13/jquery.mousewheel.min.js"><\/script>\n</head>\n<body>\n    \x3c!-- We will use this later on --\x3e\n    <div id="canvas"></div>\n</body>\n')),(0,d.kt)("p",null,"Now create a script tag and initialize UNLE"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-html"},'<script>\n  import UNLE from \'<Path To UNLE.js File>\'\n\n  let graph = new UNLE({\n    "canvas": document.getElementById("canvas"),\n    "show_id": true,\n    "node_radius": 20,\n    "node_color": 0x000000,\n  });\n<\/script>\n')),(0,d.kt)("p",null,"The options for the UNLE constructor are as follows:"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},'let graph = new UNLE({\n  // The HTML DOM element to place the canvas element used to render UNLE in\n  "canvas": document.getElementById("canvas"),\n\n  // Wether or not to show the ID of each node on the canvas\n  "show_id": false,\n\n  "node_radius": 20,\n\n  "node_color": 0x00FF00,\n\n  // The width of the edges drawn to the canvas\n  "edge_width": 3,\n});\n')),(0,d.kt)("h2",{id:"adding-nodes"},"Adding Nodes"),(0,d.kt)("p",null,"To add a node to the graph, use the ",(0,d.kt)("inlineCode",{parentName:"p"},"addNode")," method"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},'graph.add_node("<node id>");\n')),(0,d.kt)("p",null,"The id of the nodes can be either a string or a number."),(0,d.kt)("h2",{id:"adding-edges"},"Adding Edges"),(0,d.kt)("p",null,"Adding edges is really simple:"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},'graph.add_edge("<node id 1>", "<node id 2>");\n')),(0,d.kt)("h2",{id:"removing-nodes"},"Removing Nodes"),(0,d.kt)("p",null,"Removing nodes is the same as adding nodes, just removing instead of adding for example:"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},'graph.remove_node("<node id>");\n')),(0,d.kt)("h2",{id:"removing-edges"},"Removing Edges"),(0,d.kt)("p",null,"Same goes for edges:"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},'graph.remove_edge("<node id 1>", "<node id 2>");\n')),(0,d.kt)("h2",{id:"node-language-input"},"Node Language Input"),(0,d.kt)("p",null,"UNLE.js supports a simple language to add nodes and edges to the graph. The language is as follows:"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},"\nvar input = `\n  nodes: 1, 2, central node, node, hello graph world!\n\n  1 -> 2\n  central node -> 2\n  node -> central node\n`\n\ngraph.from_node_language(input);\n")))}p.isMDXComponent=!0}}]);